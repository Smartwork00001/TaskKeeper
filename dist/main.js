(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var s=n(537),r=n.n(s),o=n(645),a=n.n(o)()(r());a.push([e.id,'* {\n  margin: 0;\n  padding: 0;\n}\n\nbody{\n  position: relative;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n}\n\n.project-display, .tasks-display{\n  display: flex;\n  flex-wrap: wrap;\n  gap:1rem;\n  padding: 1rem;\n}\n\n.project, .task{\n  cursor: pointer;\n  background-color: antiquewhite;\n  border-radius: 1rem;\n  padding: 1rem;\n  border-left-style: 2px solid #ccc;\n  min-width: 10%;\n  flex: auto;\n}\n\n.nav-bar{\n  padding:1rem;\n}\n\n.okButtonDiv {\n  position: fixed;\n  top: 20%;\n  left: 47%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.add-project-form {\n  position: fixed;\n  top: 10%;\n  left: 15%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.single-project-details{\n  display: flex;\n  justify-content: space-evenly;\n}\n\n.purple-button{\n  appearance: none;\n  background: #4338ca;\n  border: 0;\n  border-radius: 0.5rem;\n  color: #fff;\n  cursor: pointer;\n  font: inherit;\n  font-weight: 500;\n  line-height: 1;\n  padding: 0.7em 1em;\n}\n\ninput[type="text"] {\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 4px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n}\n\n.hidden {\n  display: none;\n}\n\n.big-text{\n  font-weight: bold;\n  font-size: 5rem;\n}\n\n.medium-text{\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.small-text{\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.white-text{\n  color: #f8fafc;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,QAAQ;EACR,aAAa;AACf;;AAEA;EACE,eAAe;EACf,8BAA8B;EAC9B,mBAAmB;EACnB,aAAa;EACb,iCAAiC;EACjC,cAAc;EACd,UAAU;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,eAAe;EACf,QAAQ;EACR,SAAS;EACT,2BAA2B;EAC3B,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,QAAQ;EACR,SAAS;EACT,2BAA2B;EAC3B,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,SAAS;EACT,qBAAqB;EACrB,WAAW;EACX,eAAe;EACf,aAAa;EACb,gBAAgB;EAChB,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,SAAS;EACT,6BAA6B;EAC7B,UAAU;EACV,iBAAiB;EACjB,YAAY;EACZ,cAAc;EACd,uBAAuB;EACvB,6BAA6B;AAC/B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,cAAc;AAChB",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n}\n\nbody{\n  position: relative;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n}\n\n.project-display, .tasks-display{\n  display: flex;\n  flex-wrap: wrap;\n  gap:1rem;\n  padding: 1rem;\n}\n\n.project, .task{\n  cursor: pointer;\n  background-color: antiquewhite;\n  border-radius: 1rem;\n  padding: 1rem;\n  border-left-style: 2px solid #ccc;\n  min-width: 10%;\n  flex: auto;\n}\n\n.nav-bar{\n  padding:1rem;\n}\n\n.okButtonDiv {\n  position: fixed;\n  top: 20%;\n  left: 47%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.add-project-form {\n  position: fixed;\n  top: 10%;\n  left: 15%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.single-project-details{\n  display: flex;\n  justify-content: space-evenly;\n}\n\n.purple-button{\n  appearance: none;\n  background: #4338ca;\n  border: 0;\n  border-radius: 0.5rem;\n  color: #fff;\n  cursor: pointer;\n  font: inherit;\n  font-weight: 500;\n  line-height: 1;\n  padding: 0.7em 1em;\n}\n\ninput[type="text"] {\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 4px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n}\n\n.hidden {\n  display: none;\n}\n\n.big-text{\n  font-weight: bold;\n  font-size: 5rem;\n}\n\n.medium-text{\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.small-text{\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.white-text{\n  color: #f8fafc;\n}\n'],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",s=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),s&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),s&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,s,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(s)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(a[i]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);s&&a[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),o="/*# ".concat(r," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,s=0;s<t.length;s++)if(t[s].identifier===e){n=s;break}return n}function s(e,s){for(var o={},a=[],c=0;c<e.length;c++){var i=e[c],d=s.base?i[0]+s.base:i[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var m=n(u),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var A=r(p,s);s.byIndex=c,t.splice(c,0,{identifier:u,updater:A,references:1})}a.push(u)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var o=s(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var c=n(o[a]);t[c].references--}for(var i=s(e,r),d=0;d<o.length;d++){var l=n(o[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}o=i}}},569:e=>{var t={};e.exports=function(e,n){var s=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,r&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(s,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var o=t[s]={id:s,exports:{}};return e[s](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),s=n(795),r=n.n(s),o=n(569),a=n.n(o),c=n(565),i=n.n(c),d=n(216),l=n.n(d),u=n(589),m=n.n(u),p=n(426),A={};A.styleTagTransform=m(),A.setAttributes=i(),A.insert=a().bind(null,"head"),A.domAPI=r(),A.insertStyleElement=l(),t()(p.Z,A),p.Z&&p.Z.locals&&p.Z.locals;const f=document.querySelector(".okButton"),g=document.querySelector(".okButtonDiv"),y=document.querySelector(".okButtonText");f.addEventListener("click",(function(){g.classList.add("hidden")}));const h=function(e){y.textContent=e,g.classList.remove("hidden")},k=class{static getProjects(){const e=localStorage.getItem("projects");return null===e?[]:JSON.parse(e)}static updateProject(e){localStorage.removeItem("projects"),localStorage.setItem("projects",JSON.stringify(e))}},v=()=>{const e=document.querySelector(".single-project-display"),t=document.querySelector(".single-project-tasks"),n=document.querySelector(".single-task-display");e.classList.contains("hidden")||e.classList.add("hidden"),t.classList.contains("hidden")||t.classList.add("hidden"),n.classList.contains("hidden")||n.classList.add("hidden");const s=document.querySelector(".project-display");s.classList.contains("hidden")&&s.classList.remove("hidden"),s.innerHTML="",k.getProjects().forEach((e=>{const t=document.createElement("div");t.classList.add("project"),t.innerHTML=`<div class="project-name small-text">${e.name}</div>\n    <div class="project-desc small-text">${e.desc}</div>\n    <div class="project-date small-text">${e.date}</div>`,s.appendChild(t)}))};function j(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}const b=class{static getTask(e){return JSON.parse(localStorage.getItem(e))}static updateTask(e,t){localStorage.removeItem(e),localStorage.setItem(e,JSON.stringify(t))}static addProject(e){localStorage.setItem(e,JSON.stringify([]))}static removeProject(e){localStorage.removeItem(e)}static getSingleTask(e,t){return this.getTask(e).find((e=>e.name===t))}},S=class{static validateDate(e){const t=e.split("-");return!!(3===t.length&&t[0]>=1&&t[0]<=9999&&t[1]>=1&&t[1]<=12&&t[2]>=1&&t[2]<=31&&function(e){if(j(1,arguments),!function(e){return j(1,arguments),e instanceof Date||"object"===E(e)&&"[object Date]"===Object.prototype.toString.call(e)}(e)&&"number"!=typeof e)return!1;var t=function(e){j(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===C(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}(e);return!isNaN(Number(t))}(new Date(t[0],t[1],t[2])))}static validateName(e){return!!(e.length>=1&&e.length<=50&&e.match(/^[a-zA-Z0-9 .]+$/))}static validateDesc(e){return e.length>=1&&e.length<=140}static validateProject(e){return-1!==k.getProjects().findIndex((t=>t.name===e))}static validateNotes(e){return e.length>=1&&e.length<=140}static validateTask(e,t){return-1!==b.getTask(e).findIndex((e=>e.name===t))}},B=(e,t)=>{if(S.validateName(e)&&S.validateDesc(t)){const n=k.getProjects();if(-1!==n.findIndex((t=>t.name===e)))return void h("This project already exists!");n.push(new class{constructor(e,t){this.name=e,this.desc=t;const n=new Date;this.date=`${n.getDate()}-${n.getMonth()+1}-${n.getFullYear()}`}}(e,t)),b.addProject(e),k.updateProject(n),h(`Project ${e} created`),v()}else h("Please enter valid data\n    \nName must be only letters and numbers between 1 and 50 characters\n    \nDescription must be between 1 and 180 characters")},x=document.querySelector(".create-project-button"),T=document.querySelector(".add-project-form"),q=document.querySelector(".add-project");x.addEventListener("click",(function(e){e.preventDefault();const t=document.forms.addProjectForm,n=new FormData(t);B(n.get("projectName"),n.get("projectDesc")),T.classList.add("hidden"),t.reset()})),q.addEventListener("click",(()=>{T.classList.remove("hidden")}));const L=e=>{const t=(e=>{const t=k.getProjects(),n=t.findIndex((t=>t.name===e));return-1!==n?t[n]:(h("This project does not exist!"),-1)})(e),n=document.querySelector(".single-project-display"),s=document.querySelector(".single-task-display"),r=document.querySelector(".project-display");n.classList.contains("hidden")&&n.classList.remove("hidden"),s.classList.contains("hidden")||s.classList.add("hidden"),r.classList.contains("hidden")||r.classList.add("hidden"),n.querySelector(".single-project-name").textContent=t.name,n.querySelector(".single-project-desc").textContent=t.desc,n.querySelector(".single-project-date").textContent=t.date},P=class{constructor(){this.askUserTask=void 0,this.askUserDesc=!1,this.askUserName=!1,this.projectName=void 0,this.projectDesc=void 0,this.taskName=void 0}static getAskUserTask(){return this.askUserTask}static setAskUserTask(e){this.askUserTask=e}static getAskUserName(){return this.askUserName}static setAskUserName(e){this.askUserName=!!e}static getAskUserDesc(){return this.askUserDesc}static setAskUserDesc(e){this.askUserDesc=!!e}static getProjectName(){return this.projectName}static setProjectName(e){this.projectName=e}static getProjectDesc(){return this.projectDesc}static setProjectDesc(e){this.projectDesc=e}static getTaskName(){return this.taskName}static setTaskName(e){this.taskName=e}},N=(e,t)=>{const n=document.querySelector(".tasks-display"),s=document.querySelector(".single-task-display");n.classList.contains("hidden")||n.classList.add("hidden"),s.classList.contains("hidden")&&s.classList.remove("hidden");const r=document.querySelector(".single-task-project"),o=document.querySelector(".single-task-name"),a=document.querySelector(".single-task-date"),c=document.querySelector(".single-task-due"),i=document.querySelector(".single-task-priority"),d=document.querySelector(".single-task-notes"),l=document.querySelector(".single-task-status"),u=b.getSingleTask(e,t);r.textContent=u.project,o.textContent=u.name,c.textContent=u.due,a.textContent=u.date,i.textContent=u.priority,d.textContent=u.notes,l.textContent=u.status},D=document.querySelector(".askUserButton"),w=document.querySelector(".askUserDiv"),U=document.querySelector(".askUserText"),$=document.querySelector(".askUserTextArea");D.addEventListener("click",(function(){w.classList.add("hidden"),"changeProjectDesc"===P.getAskUserTask()?(((e,t)=>{const n=k.getProjects(),s=n.findIndex((t=>t.name===e));-1!==s&&S.validateDesc(t)?(n[s].desc=t,k.updateProject(n),h(` Project ${e} desc is changed!`),L(e)):h(`Project ${e} does not exist\n or desc <0 or >140 characters`)})(P.getProjectName(),$.value),P.setProjectName(void 0)):"changeProjectName"===P.getAskUserTask()?(((e,t)=>{const n=k.getProjects(),s=n.findIndex((t=>t.name===e));-1!==s?(n[s].name=t,k.updateProject(n),h(`Project ${e} is changed to ${t}!`),L(t)):h(`Project ${e} does not exist`)})(P.getProjectName(),$.value),P.setProjectName(void 0)):"changeTaskName"===P.getAskUserTask()&&(((e,t,n)=>{const s=b.getTask(e);s.find((e=>e.name===t)).name=n,b.updateTask(e,s),N(e,n)})(P.getProjectName(),P.getTaskName(),$.value),P.setProjectName(void 0),P.setTaskName(void 0)),P.setAskUserTask(void 0)}));const I=function(e){U.textContent=e,w.classList.remove("hidden")},M=()=>{const e=document.querySelector(".single-task-display"),t=document.querySelector(".single-project-tasks"),n=document.querySelector(".tasks-display"),s=document.querySelector(".single-project-name").textContent;s&&(e.classList.contains("hidden")||e.classList.add("hidden"),t.classList.contains("hidden")&&t.classList.remove("hidden"),n.innerHTML="",b.getTask(s).forEach((e=>{const t=document.createElement("div");t.classList.add("task"),t.innerHTML=`\n      <div class="display-task-project hidden">${e.project}</div>\n      <div class="display-task-name">${e.name}</div>\n      <div class="display-task-date">${e.date}</div>\n      <div class="display-task-due">${e.due}</div>\n      <div class="display-task-priority">${e.priority}</div>\n      <div class="display-task-notes">${e.notes}</div>\n      <div class="display-task-status">${e.status}</div>`,n.appendChild(t)})))},O=(e,t,n,s,r,o)=>{if(S.validateDate(s)&&S.validateName(t)&&S.validateDesc(n)&&S.validateProject(e)&&S.validateNotes(o)&&!S.validateTask(e,t)){const a=new class{constructor(e,t,n,s,r,o){this.project=e;const a=new Date;this.date=`${a.getDate()}-${a.getMonth()+1}-${a.getFullYear()}`,this.name=t,this.desc=n,this.due=s,this.priority=r,this.notes=o,this.status="not done"}}(e,t,n,s,r,o),c=b.getTask(e);c.push(a),b.updateTask(e,c),M(),h(`Task ${t} is created!`)}else h("Details not valid!")};localStorage.clear(),B("Default Project","This is the default project"),B("First Project","This is the first project"),B("Third Project","This is the third project"),B("Fourth Project","This is the fourth project"),B("Fifth Project","This is the fifth project");const F=document.querySelector(".project-display"),z=document.querySelector(".my-projects"),Z=(document.querySelector(".single-project-display"),document.querySelector(".single-project-tasks")),R=document.querySelector(".single-project-rename"),J=document.querySelector(".single-project-redesc"),H=document.querySelector(".single-project-remove");F.addEventListener("click",(function(e){const t=e.target.closest(".project");t&&(F.classList.contains("hidden")||F.classList.add("hidden"),Z.classList.contains("hidden")&&Z.classList.remove("hidden"),L(t.querySelector(".project-name").textContent),M())})),z.addEventListener("click",(function(){v()})),R.addEventListener("click",(function(e){const t=e.target.closest(".single-project-details").querySelector(".single-project-name").textContent;P.setProjectName(t),P.setAskUserTask("changeProjectName"),I("enter new name")})),J.addEventListener("click",(function(e){const t=e.target.closest(".single-project-details").querySelector(".single-project-name").textContent;P.setProjectName(t),P.setAskUserTask("changeProjectDesc"),I("enter new desc")})),H.addEventListener("click",(function(e){(e=>{const t=k.getProjects(),n=t.findIndex((t=>t.name===e));-1!==n?(t.splice(n,1),b.removeProject(e),k.updateProject(t),h(`Project ${e} is removed!`),v()):h(`Project ${e} does not exist`)})(e.target.closest(".single-project-details").querySelector(".single-project-name").textContent)})),O("Default Project","Task 1","Desc 1","2023-02-20","low","notes on task"),O("Default Project","Task 2","Desc 2","2023-2-21","normal","notes on task"),O("Default Project","Task 3","Desc 3","2023-2-22","high","notes on task");const Q=document.querySelector(".add-task"),Y=document.querySelector(".create-task-button"),W=document.querySelector(".my-tasks"),X=document.querySelector(".tasks-display"),_=(document.querySelector(".single-task-display"),document.querySelector(".single-task-rename")),G=document.querySelector(".single-task-redesc"),V=document.querySelector(".single-task-renotes"),K=document.querySelector(".single-task-redue"),ee=document.querySelector(".single-task-repriority"),te=document.querySelector(".single-task-restatus");Q.addEventListener("click",(function(){const e=document.querySelector(".add-task-form");e.classList.contains("hidden")&&e.classList.remove("hidden")})),Y.addEventListener("click",(function(e){e.preventDefault();const t=document.querySelector(".single-project-name").textContent,n=document.forms.addTaskForm,s=new FormData(n);O(t,s.get("taskName"),s.get("taskDesc"),s.get("taskDue"),s.get("taskPriority"),s.get("taskNotes")),n.reset();const r=document.querySelector(".add-task-form");r.classList.contains("hidden")||r.classList.add("hidden")})),W.addEventListener("click",(function(){M()})),X.addEventListener("click",(function(e){const t=e.target.closest(".task");t&&N(t.querySelector(".display-task-project").textContent,t.querySelector(".display-task-name").textContent)})),_.addEventListener("click",(function(){const e=document.querySelector(".single-task-project"),t=document.querySelector(".single-task-name");P.setAskUserTask("changeTaskName"),P.setTaskName(t.textContent),P.setProjectName(e.textContent),I("enter new task name")})),G.addEventListener("click",(function(){})),K.addEventListener("click",(function(){})),V.addEventListener("click",(function(){})),ee.addEventListener("click",(function(){})),te.addEventListener("click",(function(){}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,