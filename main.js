(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var s=n(537),a=n.n(s),r=n(645),o=n.n(r)()(a());o.push([e.id,'* {\n  margin: 0;\n  padding: 0;\n}\n\nbody{\n  position: relative;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n}\n\n.project-display, .tasks-display{\n  display: flex;\n  flex-wrap: wrap;\n  gap:1rem;\n  padding: 1rem;\n}\n\n.project-display {\n  background-color: #cbd5e1;\n  margin-bottom: auto;\n  flex:1;\n}\n\n.project, .task{\n  cursor: pointer;\n  background-color: antiquewhite;\n  border-radius: 1rem;\n  padding: 1rem;\n  border-left-style: 2px solid #ccc;\n  min-width: 10%;\n  flex: auto;\n}\n\n.nav-bar, .task-nav-bar{\n  padding:1rem;\n  background-color: #1e293b ;\n}\n\n.okButtonDiv {\n  position: fixed;\n  top: 20%;\n  left: 47%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.add-project-form {\n  position: fixed;\n  top: 10%;\n  left: 15%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.single-project-details{\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  gap: 1rem;\n  background-color: #fef9c3;\n}\n\n.single-project-details-wrapper,\n.single-task-details-wrapper {\n  display: flex;\n  justify-content: space-between;\n  padding:0.2rem 2rem;\n  align-items: center;\n\n}\n\n.single-project-tasks{\n  background-color: #fde047;\n}\n\n.single-task-display{\n  background-color: #fde047;\n}\n\n.purple-button{\n  appearance: none;\n  background: #4338ca;\n  border: 0;\n  border-radius: 0.5rem;\n  color: #fff;\n  cursor: pointer;\n  font: inherit;\n  font-weight: 500;\n  line-height: 1;\n  padding: 0.7em 1em;\n}\n\ninput[type="text"] {\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 4px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n}\n\n.hidden {\n  display: none;\n}\n\n.big-text{\n  font-weight: bold;\n  font-size: 5rem;\n}\n\n.medium-text{\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.small-text{\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.white-text{\n  color: #f8fafc;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,QAAQ;EACR,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;EACnB,MAAM;AACR;;AAEA;EACE,eAAe;EACf,8BAA8B;EAC9B,mBAAmB;EACnB,aAAa;EACb,iCAAiC;EACjC,cAAc;EACd,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,QAAQ;EACR,SAAS;EACT,2BAA2B;EAC3B,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,QAAQ;EACR,SAAS;EACT,2BAA2B;EAC3B,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,6BAA6B;EAC7B,SAAS;EACT,yBAAyB;AAC3B;;AAEA;;EAEE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,mBAAmB;;AAErB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,SAAS;EACT,qBAAqB;EACrB,WAAW;EACX,eAAe;EACf,aAAa;EACb,gBAAgB;EAChB,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,SAAS;EACT,6BAA6B;EAC7B,UAAU;EACV,iBAAiB;EACjB,YAAY;EACZ,cAAc;EACd,uBAAuB;EACvB,6BAA6B;AAC/B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,cAAc;AAChB",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n}\n\nbody{\n  position: relative;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n}\n\n.project-display, .tasks-display{\n  display: flex;\n  flex-wrap: wrap;\n  gap:1rem;\n  padding: 1rem;\n}\n\n.project-display {\n  background-color: #cbd5e1;\n  margin-bottom: auto;\n  flex:1;\n}\n\n.project, .task{\n  cursor: pointer;\n  background-color: antiquewhite;\n  border-radius: 1rem;\n  padding: 1rem;\n  border-left-style: 2px solid #ccc;\n  min-width: 10%;\n  flex: auto;\n}\n\n.nav-bar, .task-nav-bar{\n  padding:1rem;\n  background-color: #1e293b ;\n}\n\n.okButtonDiv {\n  position: fixed;\n  top: 20%;\n  left: 47%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.add-project-form {\n  position: fixed;\n  top: 10%;\n  left: 15%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.single-project-details{\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  gap: 1rem;\n  background-color: #fef9c3;\n}\n\n.single-project-details-wrapper,\n.single-task-details-wrapper {\n  display: flex;\n  justify-content: space-between;\n  padding:0.2rem 2rem;\n  align-items: center;\n\n}\n\n.single-project-tasks{\n  background-color: #fde047;\n}\n\n.single-task-display{\n  background-color: #fde047;\n}\n\n.purple-button{\n  appearance: none;\n  background: #4338ca;\n  border: 0;\n  border-radius: 0.5rem;\n  color: #fff;\n  cursor: pointer;\n  font: inherit;\n  font-weight: 500;\n  line-height: 1;\n  padding: 0.7em 1em;\n}\n\ninput[type="text"] {\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 4px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n}\n\n.hidden {\n  display: none;\n}\n\n.big-text{\n  font-weight: bold;\n  font-size: 5rem;\n}\n\n.medium-text{\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.small-text{\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.white-text{\n  color: #f8fafc;\n}\n'],sourceRoot:""}]);const c=o},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",s=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),s&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),s&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,s,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(s)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(o[i]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);s&&o[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),r="/*# ".concat(a," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,s=0;s<t.length;s++)if(t[s].identifier===e){n=s;break}return n}function s(e,s){for(var r={},o=[],c=0;c<e.length;c++){var i=e[c],d=s.base?i[0]+s.base:i[0],l=r[d]||0,u="".concat(d," ").concat(l);r[d]=l+1;var A=n(u),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==A)t[A].references++,t[A].updater(m);else{var p=a(m,s);s.byIndex=c,t.splice(c,0,{identifier:u,updater:p,references:1})}o.push(u)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var r=s(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var c=n(r[o]);t[c].references--}for(var i=s(e,a),d=0;d<r.length;d++){var l=n(r[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=i}}},569:e=>{var t={};e.exports=function(e,n){var s=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,a&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(s,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(s){var a=t[s];if(void 0!==a)return a.exports;var r=t[s]={id:s,exports:{}};return e[s](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),s=n(795),a=n.n(s),r=n(569),o=n.n(r),c=n(565),i=n.n(c),d=n(216),l=n.n(d),u=n(589),A=n.n(u),m=n(426),p={};p.styleTagTransform=A(),p.setAttributes=i(),p.insert=o().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=l(),t()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;const g=document.querySelector(".okButton"),f=document.querySelector(".okButtonDiv"),k=document.querySelector(".okButtonText");g.addEventListener("click",(function(){f.classList.add("hidden")}));const y=function(e){k.textContent=e,f.classList.remove("hidden")},h=class{static getProjects(){const e=localStorage.getItem("projects");return null===e?[]:JSON.parse(e)}static updateProject(e){localStorage.removeItem("projects"),localStorage.setItem("projects",JSON.stringify(e))}},v=()=>{const e=document.querySelector(".single-project-display"),t=document.querySelector(".single-project-tasks"),n=document.querySelector(".single-task-display");e.classList.contains("hidden")||e.classList.add("hidden"),t.classList.contains("hidden")||t.classList.add("hidden"),n.classList.contains("hidden")||n.classList.add("hidden");const s=document.querySelector(".project-display");s.classList.contains("hidden")&&s.classList.remove("hidden"),s.innerHTML="",h.getProjects().forEach((e=>{const t=document.createElement("div");t.classList.add("project"),t.innerHTML=`<div class="project-name small-text">${e.name}</div>\n    <div class="project-desc small-text">${e.desc}</div>\n    <div class="project-date small-text">${e.date}</div>`,s.appendChild(t)}))};function j(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}const C=class{static getTask(e){return JSON.parse(localStorage.getItem(e))}static updateTask(e,t){localStorage.removeItem(e),localStorage.setItem(e,JSON.stringify(t))}static addProject(e){localStorage.setItem(e,JSON.stringify([]))}static removeProject(e){localStorage.removeItem(e)}static getSingleTask(e,t){return this.getTask(e).find((e=>e.name===t))}},B=class{static validateDate(e){const t=e.split("-");return!!(3===t.length&&t[0]>=1&&t[0]<=9999&&t[1]>=1&&t[1]<=12&&t[2]>=1&&t[2]<=31&&function(e){if(j(1,arguments),!function(e){return j(1,arguments),e instanceof Date||"object"===E(e)&&"[object Date]"===Object.prototype.toString.call(e)}(e)&&"number"!=typeof e)return!1;var t=function(e){j(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===b(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}(e);return!isNaN(Number(t))}(new Date(t[0],t[1],t[2])))}static validateName(e){return!!(e.length>=1&&e.length<=50&&e.match(/^[a-zA-Z0-9 .]+$/))}static validateDesc(e){return e.length>=1&&e.length<=140}static validateProject(e){return-1!==h.getProjects().findIndex((t=>t.name===e))}static validateNotes(e){return e.length>=1&&e.length<=140}static validateTask(e,t){return-1!==C.getTask(e).findIndex((e=>e.name===t))}},S=(e,t)=>{if(B.validateName(e)&&B.validateDesc(t)){const n=h.getProjects();if(-1!==n.findIndex((t=>t.name===e)))return void y("This project already exists!");n.push(new class{constructor(e,t){this.name=e,this.desc=t;const n=new Date;this.date=`${n.getDate()}-${n.getMonth()+1}-${n.getFullYear()}`}}(e,t)),C.addProject(e),h.updateProject(n),y(`Project ${e} created`),v()}else y("Please enter valid data\n    \nName must be only letters and numbers between 1 and 50 characters\n    \nDescription must be between 1 and 180 characters")},T=document.querySelector(".create-project-button"),x=document.querySelector(".add-project-form"),q=document.querySelector(".add-project");T.addEventListener("click",(function(e){e.preventDefault();const t=document.forms.addProjectForm,n=new FormData(t);S(n.get("projectName"),n.get("projectDesc")),x.classList.add("hidden"),t.reset()})),q.addEventListener("click",(()=>{x.classList.remove("hidden")}));const N=e=>{const t=(e=>{const t=h.getProjects(),n=t.findIndex((t=>t.name===e));return-1!==n?t[n]:(y("This project does not exist!"),-1)})(e),n=document.querySelector(".single-project-display"),s=document.querySelector(".single-task-display"),a=document.querySelector(".project-display");n.classList.contains("hidden")&&n.classList.remove("hidden"),s.classList.contains("hidden")||s.classList.add("hidden"),a.classList.contains("hidden")||a.classList.add("hidden"),n.querySelector(".single-project-name").textContent=t.name,n.querySelector(".single-project-desc").textContent=t.desc,n.querySelector(".single-project-date").textContent=t.date},L=class{constructor(){this.askUserTask=void 0,this.askUserDesc=!1,this.askUserName=!1,this.projectName=void 0,this.projectDesc=void 0,this.taskName=void 0}static getAskUserTask(){return this.askUserTask}static setAskUserTask(e){this.askUserTask=e}static getAskUserName(){return this.askUserName}static setAskUserName(e){this.askUserName=!!e}static getAskUserDesc(){return this.askUserDesc}static setAskUserDesc(e){this.askUserDesc=!!e}static getProjectName(){return this.projectName}static setProjectName(e){this.projectName=e}static getProjectDesc(){return this.projectDesc}static setProjectDesc(e){this.projectDesc=e}static getTaskName(){return this.taskName}static setTaskName(e){this.taskName=e}},P=(e,t)=>{const n=document.querySelector(".tasks-display"),s=document.querySelector(".single-task-display");n.classList.contains("hidden")||n.classList.add("hidden"),s.classList.contains("hidden")&&s.classList.remove("hidden");const a=document.querySelector(".single-task-project"),r=document.querySelector(".single-task-name"),o=document.querySelector(".single-task-desc"),c=document.querySelector(".single-task-date"),i=document.querySelector(".single-task-due"),d=document.querySelector(".single-task-priority"),l=document.querySelector(".single-task-notes"),u=document.querySelector(".single-task-status"),A=C.getSingleTask(e,t);a.textContent=A.project,r.textContent=A.name,o.textContent=A.desc,i.textContent=A.due,c.textContent=A.date,d.textContent=A.priority,l.textContent=A.notes,u.textContent=A.status},w=document.querySelector(".askUserButton"),D=document.querySelector(".askUserDiv"),U=document.querySelector(".askUserText"),I=document.querySelector(".askUserTextArea");w.addEventListener("click",(function(){D.classList.add("hidden"),"changeProjectDesc"===L.getAskUserTask()?((e,t)=>{const n=h.getProjects(),s=n.findIndex((t=>t.name===e));-1!==s&&B.validateDesc(t)?(n[s].desc=t,h.updateProject(n),y(` Project ${e} desc is changed!`),N(e)):y(`Project ${e} does not exist\n or desc <0 or >140 characters`)})(L.getProjectName(),I.value):"changeProjectName"===L.getAskUserTask()?((e,t)=>{const n=h.getProjects(),s=n.findIndex((t=>t.name===e));-1!==s?(n[s].name=t,h.updateProject(n),y(`Project ${e} is changed to ${t}!`),N(t)):y(`Project ${e} does not exist`)})(L.getProjectName(),I.value):"changeTaskName"===L.getAskUserTask()?((e,t,n)=>{const s=C.getTask(e);s.find((e=>e.name===t)).name=n,C.updateTask(e,s),P(e,n)})(L.getProjectName(),L.getTaskName(),I.value):"changeTaskDesc"===L.getAskUserTask()?((e,t,n)=>{if(B.validateDate(n)){const s=C.getTask(e);s.find((e=>e.name===t)).desc=n,C.updateTask(e,s),P(e,t)}else y("Invalid!")})(L.getProjectName(),L.getTaskName(),I.value):"changeTaskDue"===L.getAskUserTask()?((e,t,n)=>{if(B.validateDate(n)){const s=C.getTask(e);s.find((e=>e.name===t)).due=n,C.updateTask(e,s),P(e,t)}else y("Invalid!")})(L.getProjectName(),L.getTaskName(),I.value):"changeTaskNotes"===L.getAskUserTask()?((e,t,n)=>{if(B.validateNotes(n)){const s=C.getTask(e);s.find((e=>e.name===t)).notes=n,C.updateTask(e,s),P(e,t)}else y("Invalid!")})(L.getProjectName(),L.getTaskName(),I.value):"changeTaskPriority"===L.getAskUserTask()?((e,t,n)=>{if(B.validateNotes(n)){const s=C.getTask(e);s.find((e=>e.name===t)).priority=n,C.updateTask(e,s),P(e,t)}else y("Invalid!")})(L.getProjectName(),L.getTaskName(),I.value):"changeTaskStatus"===L.getAskUserTask()&&((e,t,n)=>{if(B.validateNotes(n)){const s=C.getTask(e);s.find((e=>e.name===t)).status=n,C.updateTask(e,s),P(e,t)}else y("Invalid!")})(L.getProjectName(),L.getTaskName(),I.value),L.setAskUserTask(void 0),L.setProjectName(void 0),L.setTaskName(void 0)}));const $=function(e){U.textContent=e,D.classList.remove("hidden")},M=()=>{const e=document.querySelector(".single-task-display"),t=document.querySelector(".single-project-tasks"),n=document.querySelector(".tasks-display"),s=document.querySelector(".single-project-name").textContent;if(console.log(s),s){e.classList.contains("hidden")||e.classList.add("hidden"),t.classList.contains("hidden")&&t.classList.remove("hidden"),n.classList.contains("hidden")&&n.classList.remove("hidden"),n.innerHTML="";const a=C.getTask(s);console.log(a),a.forEach((e=>{const t=document.createElement("div");t.classList.add("task"),t.innerHTML=`\n      <div class="display-task-project hidden">${e.project}</div>\n      <div class="display-task-name">${e.name}</div>\n      <div class="display-task-date">${e.date}</div>\n      <div class="display-task-due">${e.due}</div>\n      <div class="display-task-priority">${e.priority}</div>\n      <div class="display-task-notes">${e.notes}</div>\n      <div class="display-task-status">${e.status}</div>`,n.appendChild(t)}))}},O=(e,t,n,s,a,r)=>{if(B.validateDate(s)&&B.validateName(t)&&B.validateDesc(n)&&B.validateProject(e)&&B.validateNotes(r)&&!B.validateTask(e,t)){const o=new class{constructor(e,t,n,s,a,r){this.project=e;const o=new Date;this.date=`${o.getDate()}-${o.getMonth()+1}-${o.getFullYear()}`,this.name=t,this.desc=n,this.due=s,this.priority=a,this.notes=r,this.status="not done"}}(e,t,n,s,a,r),c=C.getTask(e);c.push(o),C.updateTask(e,c),M(),y(`Task ${t} is created!`)}else y("Details not valid!")};localStorage.clear(),S("Default Project","This is the default project"),S("First Project","This is the first project"),S("Third Project","This is the third project"),S("Fourth Project","This is the fourth project"),S("Fifth Project","This is the fifth project");const F=document.querySelector(".project-display"),z=document.querySelector(".my-projects"),Z=(document.querySelector(".single-project-display"),document.querySelector(".single-project-tasks")),R=document.querySelector(".single-project-rename"),J=document.querySelector(".single-project-redesc"),H=document.querySelector(".single-project-remove");F.addEventListener("click",(function(e){const t=e.target.closest(".project");t&&(F.classList.contains("hidden")||F.classList.add("hidden"),Z.classList.contains("hidden")&&Z.classList.remove("hidden"),N(t.querySelector(".project-name").textContent),M())})),z.addEventListener("click",(function(){v()})),R.addEventListener("click",(function(e){const t=e.target.closest(".single-project-details").querySelector(".single-project-name").textContent;L.setProjectName(t),L.setAskUserTask("changeProjectName"),$("enter new name")})),J.addEventListener("click",(function(e){const t=e.target.closest(".single-project-details").querySelector(".single-project-name").textContent;L.setProjectName(t),L.setAskUserTask("changeProjectDesc"),$("enter new desc")})),H.addEventListener("click",(function(e){(e=>{const t=h.getProjects(),n=t.findIndex((t=>t.name===e));-1!==n?(t.splice(n,1),C.removeProject(e),h.updateProject(t),y(`Project ${e} is removed!`),v()):y(`Project ${e} does not exist`)})(e.target.closest(".single-project-details").querySelector(".single-project-name").textContent)})),O("Default Project","Task 1","Desc 1","2023-02-20","low","notes on task"),O("Default Project","Task 2","Desc 2","2023-2-21","normal","notes on task"),O("Default Project","Task 3","Desc 3","2023-2-22","high","notes on task");const Q=document.querySelector(".add-task"),Y=document.querySelector(".create-task-button"),W=document.querySelector(".my-tasks"),X=document.querySelector(".tasks-display"),_=(document.querySelector(".single-task-display"),document.querySelector(".single-task-rename")),G=document.querySelector(".single-task-redesc"),V=document.querySelector(".single-task-renotes"),K=document.querySelector(".single-task-redue"),ee=document.querySelector(".single-task-repriority"),te=document.querySelector(".single-task-restatus"),ne=function(){const e=document.querySelector(".single-task-project"),t=document.querySelector(".single-task-name");L.setTaskName(t.textContent),L.setProjectName(e.textContent)};Q.addEventListener("click",(function(){const e=document.querySelector(".add-task-form");e.classList.contains("hidden")&&e.classList.remove("hidden")})),Y.addEventListener("click",(function(e){e.preventDefault();const t=document.querySelector(".single-project-name").textContent,n=document.forms.addTaskForm,s=new FormData(n);O(t,s.get("taskName"),s.get("taskDesc"),s.get("taskDue"),s.get("taskPriority"),s.get("taskNotes")),n.reset();const a=document.querySelector(".add-task-form");a.classList.contains("hidden")||a.classList.add("hidden")})),W.addEventListener("click",(function(){M()})),X.addEventListener("click",(function(e){const t=e.target.closest(".task");t&&P(t.querySelector(".display-task-project").textContent,t.querySelector(".display-task-name").textContent)})),_.addEventListener("click",(function(){ne(),L.setAskUserTask("changeTaskName"),$("enter new task name")})),G.addEventListener("click",(function(){ne(),L.setAskUserTask("changeTaskDesc"),$("enter new task desc")})),K.addEventListener("click",(function(){ne(),L.setAskUserTask("changeTaskDue"),$("enter new task due")})),V.addEventListener("click",(function(){ne(),L.setAskUserTask("changeTaskNotes"),$("enter new task notes")})),ee.addEventListener("click",(function(){ne(),L.setAskUserTask("changeTaskPriority"),$("enter new task priority")})),te.addEventListener("click",(function(){ne(),L.setAskUserTask("changeTaskStatus"),$("enter new task status")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,