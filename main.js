(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),s=n(645),a=n.n(s)()(o());a.push([e.id,'* {\n  margin: 0;\n  padding: 0;\n}\n\nbody{\n  position: relative;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n}\n\n.project-display{\n  display: flex;\n  flex-wrap: wrap;\n  gap:1rem;\n  padding: 1rem;\n}\n\n.project{\n  cursor: pointer;\n  background-color: antiquewhite;\n  border-radius: 1rem;\n  padding: 1rem;\n  border-left-style: 2px solid #ccc;\n  width: 10%;\n  flex: auto;\n}\n\n.nav-bar{\n  padding:1rem;\n}\n\n.okButtonDiv {\n  position: fixed;\n  top: 20%;\n  left: 47%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.add-project-form {\n  position: fixed;\n  top: 10%;\n  left: 15%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.single-project-details{\n  display: flex;\n  justify-content: space-evenly;\n}\n\n.purple-button{\n  appearance: none;\n  background: #4338ca;\n  border: 0;\n  border-radius: 0.5rem;\n  color: #fff;\n  cursor: pointer;\n  font: inherit;\n  font-weight: 500;\n  line-height: 1;\n  padding: 0.7em 1em;\n}\n\ninput[type="text"] {\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 4px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n}\n\n.hidden {\n  display: none;\n}\n\n.big-text{\n  font-weight: bold;\n  font-size: 5rem;\n}\n\n.medium-text{\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.small-text{\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.white-text{\n  color: #f8fafc;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,QAAQ;EACR,aAAa;AACf;;AAEA;EACE,eAAe;EACf,8BAA8B;EAC9B,mBAAmB;EACnB,aAAa;EACb,iCAAiC;EACjC,UAAU;EACV,UAAU;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,eAAe;EACf,QAAQ;EACR,SAAS;EACT,2BAA2B;EAC3B,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,QAAQ;EACR,SAAS;EACT,2BAA2B;EAC3B,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,SAAS;EACT,qBAAqB;EACrB,WAAW;EACX,eAAe;EACf,aAAa;EACb,gBAAgB;EAChB,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,SAAS;EACT,6BAA6B;EAC7B,UAAU;EACV,iBAAiB;EACjB,YAAY;EACZ,cAAc;EACd,uBAAuB;EACvB,6BAA6B;AAC/B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,cAAc;AAChB",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n}\n\nbody{\n  position: relative;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n}\n\n.project-display{\n  display: flex;\n  flex-wrap: wrap;\n  gap:1rem;\n  padding: 1rem;\n}\n\n.project{\n  cursor: pointer;\n  background-color: antiquewhite;\n  border-radius: 1rem;\n  padding: 1rem;\n  border-left-style: 2px solid #ccc;\n  width: 10%;\n  flex: auto;\n}\n\n.nav-bar{\n  padding:1rem;\n}\n\n.okButtonDiv {\n  position: fixed;\n  top: 20%;\n  left: 47%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.add-project-form {\n  position: fixed;\n  top: 10%;\n  left: 15%;\n  background-color: aliceblue;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  gap: 2rem;\n  border-radius: 1rem;\n}\n\n.single-project-details{\n  display: flex;\n  justify-content: space-evenly;\n}\n\n.purple-button{\n  appearance: none;\n  background: #4338ca;\n  border: 0;\n  border-radius: 0.5rem;\n  color: #fff;\n  cursor: pointer;\n  font: inherit;\n  font-weight: 500;\n  line-height: 1;\n  padding: 0.7em 1em;\n}\n\ninput[type="text"] {\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 4px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n}\n\n.hidden {\n  display: none;\n}\n\n.big-text{\n  font-weight: bold;\n  font-size: 5rem;\n}\n\n.medium-text{\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.small-text{\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.white-text{\n  color: #f8fafc;\n}\n'],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(a[i]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);r&&a[A[0]]||(void 0!==s&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=s),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),t.push(A))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},a=[],c=0;c<e.length;c++){var i=e[c],d=r.base?i[0]+r.base:i[0],A=s[d]||0,l="".concat(d," ").concat(A);s[d]=A+1;var u=n(l),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=o(p,r);r.byIndex=c,t.splice(c,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var s=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var c=n(s[a]);t[c].references--}for(var i=r(e,o),d=0;d<s.length;d++){var A=n(s[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}s=i}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={id:r,exports:{}};return e[r](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),s=n(569),a=n.n(s),c=n(565),i=n.n(c),d=n(216),A=n.n(d),l=n(589),u=n.n(l),p=n(426),m={};m.styleTagTransform=u(),m.setAttributes=i(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=document.querySelector(".okButton"),g=document.querySelector(".okButtonDiv"),h=document.querySelector(".okButtonText");f.addEventListener("click",(function(){g.classList.add("hidden")}));const E=function(e){h.textContent=e,g.classList.remove("hidden")},v=class{static getProjects(){const e=localStorage.getItem("projects");return null===e?[]:JSON.parse(e)}static updateProject(e){localStorage.removeItem("projects"),localStorage.setItem("projects",JSON.stringify(e))}},C=class{static validateDate(e,t){const n=e.split("-");return!!(3===n.length&&n[0]>=1&&n[0]<=31&&n[1]>=1&&n[1]<=12&&n[2]>=1&&n[2]<=9999&&t(new Date(n[2],n[1],n[0])))}static validateName(e){return!!(e.length>=1&&e.length<=50&&e.match(/^[a-zA-Z0-9 .]+$/))}static validateDesc(e){return e.length>=1&&e.length<=140}},j=(e,t)=>{if(C.validateName(e)&&C.validateDesc(t)){const n=v.getProjects();if(-1!==n.findIndex((t=>t.name===e)))return void E("This project already exists!");n.push(new class{constructor(e,t){this.name=e,this.desc=t;const n=new Date;this.date=`${n.getDate()}-${n.getMonth()+1}-${n.getFullYear()}`}}(e,t)),v.updateProject(n),E(`Project ${e} created`),(()=>{const e=document.querySelector(".project-display");e.innerHTML="",v.getProjects().forEach((t=>{const n=document.createElement("div");n.classList.add("project"),n.innerHTML=`<div class="project-name small-text">${t.name}</div>\n    <div class="project-desc small-text">${t.desc}</div>\n    <div class="project-date small-text">${t.date}</div>`,e.appendChild(n)}))})()}else E("Please enter valid data\n    \nName must be only letters and numbers between 1 and 50 characters\n    \nDescription must be between 1 and 180 characters")},B=document.querySelector(".create-project-button"),y=document.querySelector(".add-project-form"),b=document.querySelector(".add-project");B.addEventListener("click",(function(e){e.preventDefault();const t=document.forms.addProjectForm,n=new FormData(t);j(n.get("projectName"),n.get("projectDesc")),y.classList.add("hidden"),t.reset()})),b.addEventListener("click",(()=>{y.classList.remove("hidden")}));const x=e=>{const t=(e=>{const t=v.getProjects(),n=t.findIndex((t=>t.name===e));return-1!==n?t[n]:(E("This project does not exist!"),-1)})(e),n=document.querySelector(".single-project-display");n.classList.contains("hidden")&&n.classList.remove("hidden"),n.querySelector(".single-project-name").textContent=t.name,n.querySelector(".single-project-desc").textContent=t.desc,n.querySelector(".single-project-date").textContent=t.date},k=class{constructor(){this.askUserTask=void 0,this.askUserDesc=!1,this.askUserName=!1,this.projectName=void 0,this.projectDesc=void 0}static getAskUserTask(){return this.askUserTask}static setAskUserTask(e){this.askUserTask=e}static getAskUserName(){return this.askUserName}static setAskUserName(e){this.askUserName=!!e}static getAskUserDesc(){return this.askUserDesc}static setAskUserDesc(e){this.askUserDesc=!!e}static getProjectName(){return this.projectName}static setProjectName(e){this.projectName=e}static getProjectDesc(){return this.projectDesc}static setProjectDesc(e){this.projectDesc=e}},S=document.querySelector(".askUserButton"),P=document.querySelector(".askUserDiv"),w=document.querySelector(".askUserText"),U=document.querySelector(".askUserTextArea");S.addEventListener("click",(function(){P.classList.add("hidden"),"changeProjectDesc"===k.getAskUserTask()?(((e,t)=>{const n=v.getProjects(),r=n.findIndex((t=>t.name===e));-1!==r&&C.validateDesc(t)?(n[r].desc=t,v.updateProject(n),E(` Project ${e} desc is changed!`),x(e)):E(`Project ${e} does not exist\n or desc <0 or >140 characters`)})(k.getProjectName(),U.value),k.setProjectName(void 0)):"changeProjectName"===k.getAskUserTask()&&(((e,t)=>{const n=v.getProjects(),r=n.findIndex((t=>t.name===e));-1!==r?(n[r].name=t,v.updateProject(n),E(`Project ${e} is changed to ${t}!`),x(t)):E(`Project ${e} does not exist`)})(k.getProjectName(),U.value),k.setProjectName(void 0)),k.setAskUserTask(void 0)}));const T=function(e){w.textContent=e,P.classList.remove("hidden")};localStorage.clear(),j("Default Project","This is the default project"),j("First Project","This is the first project");const L=document.querySelector(".project-display"),q=document.querySelector(".my-projects"),D=document.querySelector(".single-project-display"),N=document.querySelector(".single-project-tasks"),I=document.querySelector(".single-project-rename"),$=document.querySelector(".single-project-redesc");L.addEventListener("click",(function(e){const t=e.target.closest(".project");t&&(L.classList.contains("hidden")||L.classList.add("hidden"),N.classList.contains("hidden")&&N.classList.remove("hidden"),x(t.querySelector(".project-name").textContent))})),q.addEventListener("click",(function(){L.classList.contains("hidden")&&L.classList.remove("hidden"),N.classList.contains("hidden")||N.classList.add("hidden"),D.classList.contains("hidden")||D.classList.add("hidden")})),I.addEventListener("click",(function(e){const t=e.target.closest(".single-project-details").querySelector(".single-project-name").textContent;k.setProjectName(t),k.setAskUserTask("changeProjectName"),T("enter new name")})),$.addEventListener("click",(function(e){const t=e.target.closest(".single-project-details").querySelector(".single-project-name").textContent;k.setProjectName(t),k.setAskUserTask("changeProjectDesc"),T("enter new desc")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,